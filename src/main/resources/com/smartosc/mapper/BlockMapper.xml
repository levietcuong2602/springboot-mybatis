<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.smartosc.datasource.mapper.BlockMapper">
  <resultMap id="BaseResultMap" type="com.smartosc.datasource.entity.Block">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="hash" jdbcType="DISTINCT" property="hash" />
    <result column="epoch_no" jdbcType="DISTINCT" property="epochNo" />
    <result column="slot_no" jdbcType="DISTINCT" property="slotNo" />
    <result column="epoch_slot_no" jdbcType="DISTINCT" property="epochSlotNo" />
    <result column="block_no" jdbcType="DISTINCT" property="blockNo" />
    <result column="previous_id" jdbcType="BIGINT" property="previousId" />
    <result column="slot_leader_id" jdbcType="BIGINT" property="slotLeaderId" />
    <result column="size" jdbcType="DISTINCT" property="size" />
    <result column="time" jdbcType="TIMESTAMP" property="time" />
    <result column="tx_count" jdbcType="BIGINT" property="txCount" />
    <result column="proto_major" jdbcType="DISTINCT" property="protoMajor" />
    <result column="proto_minor" jdbcType="DISTINCT" property="protoMinor" />
    <result column="vrf_key" jdbcType="VARCHAR" property="vrfKey" />
    <result column="op_cert" jdbcType="DISTINCT" property="opCert" />
    <result column="op_cert_counter" jdbcType="DISTINCT" property="opCertCounter" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, hash, epoch_no, slot_no, epoch_slot_no, block_no, previous_id, slot_leader_id, 
    size, time, tx_count, proto_major, proto_minor, vrf_key, op_cert, op_cert_counter
  </sql>
  <select id="selectByExample" parameterType="com.smartosc.datasource.entity.BlockExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from block
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from block
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from block
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.smartosc.datasource.entity.BlockExample">
    delete from block
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.smartosc.datasource.entity.Block">
    insert into block (id, hash, epoch_no, 
      slot_no, epoch_slot_no, block_no, 
      previous_id, slot_leader_id, size, 
      time, tx_count, proto_major, 
      proto_minor, vrf_key, op_cert, 
      op_cert_counter)
    values (#{id,jdbcType=BIGINT}, #{hash,jdbcType=DISTINCT}, #{epochNo,jdbcType=DISTINCT}, 
      #{slotNo,jdbcType=DISTINCT}, #{epochSlotNo,jdbcType=DISTINCT}, #{blockNo,jdbcType=DISTINCT}, 
      #{previousId,jdbcType=BIGINT}, #{slotLeaderId,jdbcType=BIGINT}, #{size,jdbcType=DISTINCT}, 
      #{time,jdbcType=TIMESTAMP}, #{txCount,jdbcType=BIGINT}, #{protoMajor,jdbcType=DISTINCT}, 
      #{protoMinor,jdbcType=DISTINCT}, #{vrfKey,jdbcType=VARCHAR}, #{opCert,jdbcType=DISTINCT}, 
      #{opCertCounter,jdbcType=DISTINCT})
  </insert>
  <insert id="insertSelective" parameterType="com.smartosc.datasource.entity.Block">
    insert into block
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="hash != null">
        hash,
      </if>
      <if test="epochNo != null">
        epoch_no,
      </if>
      <if test="slotNo != null">
        slot_no,
      </if>
      <if test="epochSlotNo != null">
        epoch_slot_no,
      </if>
      <if test="blockNo != null">
        block_no,
      </if>
      <if test="previousId != null">
        previous_id,
      </if>
      <if test="slotLeaderId != null">
        slot_leader_id,
      </if>
      <if test="size != null">
        size,
      </if>
      <if test="time != null">
        time,
      </if>
      <if test="txCount != null">
        tx_count,
      </if>
      <if test="protoMajor != null">
        proto_major,
      </if>
      <if test="protoMinor != null">
        proto_minor,
      </if>
      <if test="vrfKey != null">
        vrf_key,
      </if>
      <if test="opCert != null">
        op_cert,
      </if>
      <if test="opCertCounter != null">
        op_cert_counter,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="hash != null">
        #{hash,jdbcType=DISTINCT},
      </if>
      <if test="epochNo != null">
        #{epochNo,jdbcType=DISTINCT},
      </if>
      <if test="slotNo != null">
        #{slotNo,jdbcType=DISTINCT},
      </if>
      <if test="epochSlotNo != null">
        #{epochSlotNo,jdbcType=DISTINCT},
      </if>
      <if test="blockNo != null">
        #{blockNo,jdbcType=DISTINCT},
      </if>
      <if test="previousId != null">
        #{previousId,jdbcType=BIGINT},
      </if>
      <if test="slotLeaderId != null">
        #{slotLeaderId,jdbcType=BIGINT},
      </if>
      <if test="size != null">
        #{size,jdbcType=DISTINCT},
      </if>
      <if test="time != null">
        #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="txCount != null">
        #{txCount,jdbcType=BIGINT},
      </if>
      <if test="protoMajor != null">
        #{protoMajor,jdbcType=DISTINCT},
      </if>
      <if test="protoMinor != null">
        #{protoMinor,jdbcType=DISTINCT},
      </if>
      <if test="vrfKey != null">
        #{vrfKey,jdbcType=VARCHAR},
      </if>
      <if test="opCert != null">
        #{opCert,jdbcType=DISTINCT},
      </if>
      <if test="opCertCounter != null">
        #{opCertCounter,jdbcType=DISTINCT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.smartosc.datasource.entity.BlockExample" resultType="java.lang.Long">
    select count(*) from block
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update block
    <set>
      <if test="row.id != null">
        id = #{row.id,jdbcType=BIGINT},
      </if>
      <if test="row.hash != null">
        hash = #{row.hash,jdbcType=DISTINCT},
      </if>
      <if test="row.epochNo != null">
        epoch_no = #{row.epochNo,jdbcType=DISTINCT},
      </if>
      <if test="row.slotNo != null">
        slot_no = #{row.slotNo,jdbcType=DISTINCT},
      </if>
      <if test="row.epochSlotNo != null">
        epoch_slot_no = #{row.epochSlotNo,jdbcType=DISTINCT},
      </if>
      <if test="row.blockNo != null">
        block_no = #{row.blockNo,jdbcType=DISTINCT},
      </if>
      <if test="row.previousId != null">
        previous_id = #{row.previousId,jdbcType=BIGINT},
      </if>
      <if test="row.slotLeaderId != null">
        slot_leader_id = #{row.slotLeaderId,jdbcType=BIGINT},
      </if>
      <if test="row.size != null">
        size = #{row.size,jdbcType=DISTINCT},
      </if>
      <if test="row.time != null">
        time = #{row.time,jdbcType=TIMESTAMP},
      </if>
      <if test="row.txCount != null">
        tx_count = #{row.txCount,jdbcType=BIGINT},
      </if>
      <if test="row.protoMajor != null">
        proto_major = #{row.protoMajor,jdbcType=DISTINCT},
      </if>
      <if test="row.protoMinor != null">
        proto_minor = #{row.protoMinor,jdbcType=DISTINCT},
      </if>
      <if test="row.vrfKey != null">
        vrf_key = #{row.vrfKey,jdbcType=VARCHAR},
      </if>
      <if test="row.opCert != null">
        op_cert = #{row.opCert,jdbcType=DISTINCT},
      </if>
      <if test="row.opCertCounter != null">
        op_cert_counter = #{row.opCertCounter,jdbcType=DISTINCT},
      </if>
    </set>
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update block
    set id = #{row.id,jdbcType=BIGINT},
      hash = #{row.hash,jdbcType=DISTINCT},
      epoch_no = #{row.epochNo,jdbcType=DISTINCT},
      slot_no = #{row.slotNo,jdbcType=DISTINCT},
      epoch_slot_no = #{row.epochSlotNo,jdbcType=DISTINCT},
      block_no = #{row.blockNo,jdbcType=DISTINCT},
      previous_id = #{row.previousId,jdbcType=BIGINT},
      slot_leader_id = #{row.slotLeaderId,jdbcType=BIGINT},
      size = #{row.size,jdbcType=DISTINCT},
      time = #{row.time,jdbcType=TIMESTAMP},
      tx_count = #{row.txCount,jdbcType=BIGINT},
      proto_major = #{row.protoMajor,jdbcType=DISTINCT},
      proto_minor = #{row.protoMinor,jdbcType=DISTINCT},
      vrf_key = #{row.vrfKey,jdbcType=VARCHAR},
      op_cert = #{row.opCert,jdbcType=DISTINCT},
      op_cert_counter = #{row.opCertCounter,jdbcType=DISTINCT}
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.smartosc.datasource.entity.Block">
    update block
    <set>
      <if test="hash != null">
        hash = #{hash,jdbcType=DISTINCT},
      </if>
      <if test="epochNo != null">
        epoch_no = #{epochNo,jdbcType=DISTINCT},
      </if>
      <if test="slotNo != null">
        slot_no = #{slotNo,jdbcType=DISTINCT},
      </if>
      <if test="epochSlotNo != null">
        epoch_slot_no = #{epochSlotNo,jdbcType=DISTINCT},
      </if>
      <if test="blockNo != null">
        block_no = #{blockNo,jdbcType=DISTINCT},
      </if>
      <if test="previousId != null">
        previous_id = #{previousId,jdbcType=BIGINT},
      </if>
      <if test="slotLeaderId != null">
        slot_leader_id = #{slotLeaderId,jdbcType=BIGINT},
      </if>
      <if test="size != null">
        size = #{size,jdbcType=DISTINCT},
      </if>
      <if test="time != null">
        time = #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="txCount != null">
        tx_count = #{txCount,jdbcType=BIGINT},
      </if>
      <if test="protoMajor != null">
        proto_major = #{protoMajor,jdbcType=DISTINCT},
      </if>
      <if test="protoMinor != null">
        proto_minor = #{protoMinor,jdbcType=DISTINCT},
      </if>
      <if test="vrfKey != null">
        vrf_key = #{vrfKey,jdbcType=VARCHAR},
      </if>
      <if test="opCert != null">
        op_cert = #{opCert,jdbcType=DISTINCT},
      </if>
      <if test="opCertCounter != null">
        op_cert_counter = #{opCertCounter,jdbcType=DISTINCT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.smartosc.datasource.entity.Block">
    update block
    set hash = #{hash,jdbcType=DISTINCT},
      epoch_no = #{epochNo,jdbcType=DISTINCT},
      slot_no = #{slotNo,jdbcType=DISTINCT},
      epoch_slot_no = #{epochSlotNo,jdbcType=DISTINCT},
      block_no = #{blockNo,jdbcType=DISTINCT},
      previous_id = #{previousId,jdbcType=BIGINT},
      slot_leader_id = #{slotLeaderId,jdbcType=BIGINT},
      size = #{size,jdbcType=DISTINCT},
      time = #{time,jdbcType=TIMESTAMP},
      tx_count = #{txCount,jdbcType=BIGINT},
      proto_major = #{protoMajor,jdbcType=DISTINCT},
      proto_minor = #{protoMinor,jdbcType=DISTINCT},
      vrf_key = #{vrfKey,jdbcType=VARCHAR},
      op_cert = #{opCert,jdbcType=DISTINCT},
      op_cert_counter = #{opCertCounter,jdbcType=DISTINCT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>